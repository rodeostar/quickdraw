import { colors } from "quickdraw";

export default () =>
  console.info(
    colors.yellow(
      `
██████╗ ██╗   ██╗██╗ ██████╗██╗  ██╗██████╗ ██████╗  █████╗ ██╗    ██╗
██╔═══██╗██║   ██║██║██╔════╝██║ ██╔╝██╔══██╗██╔══██╗██╔══██╗██║    ██║
██║   ██║██║   ██║██║██║     █████╔╝ ██║  ██║██████╔╝███████║██║ █╗ ██║
██║▄▄ ██║██║   ██║██║██║     ██╔═██╗ ██║  ██║██╔══██╗██╔══██║██║███╗██║
╚██████╔╝╚██████╔╝██║╚██████╗██║  ██╗██████╔╝██║  ██║██║  ██║╚███╔███╔╝
 ╚══▀▀═╝  ╚═════╝ ╚═╝ ╚═════╝╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝ ╚══╝╚══╝                                                    
`
    )
  );

function sleepylog(msg: () => void) {
  return new Promise((resolve) =>
    setTimeout(() => {
      msg();
      resolve("");
    }, 50)
  );
}

export const startupMessage = async (port = 5000) => {
  console.info(
    colors.bgCyan(
      ` https://localhost:${port}                                                 😈😈😈😈😈😈😈😈 `
    )
  );

  const cheatSheet = {
    "/app": "Root directory for your application",
    "/app/globals.ts":
      "This is vanilla JS for your client, that will be added to every page",
    "/app/vanilla": "Add vanilla JS snippets here, import into globals.ts",
    "/app/pages":
      "name.tsx is converted to a route /name, about.tsx->/about, etc",
    "/.quickdraw":
      "This is where Quickdraw stores assets, codegen, and build output",
    "/.quickdraw/assets":
      "globals.ts -> /assets/globals.js, routing + PPH -> /assets/{page}.bundle.js",
    "/.quickdraw/client":
      "Quickdraw stores code gen in here to support generating the client bundle.",
    "/.quickdraw/imports.ts":
      "Autogenerated mapping of your pages folder, used for routing.",
    PPH: "(per page hydration) Add {page}.hydrate.tsx to /app/pages, run hydrate on a JSX component",
  };

  await sleepylog(() =>
    console.info(
      colors.cyan(`
      ██████╗██╗  ██╗███████╗ █████╗ ████████╗    ███████╗██╗  ██╗███████╗███████╗████████╗    
      ██╔════╝██║  ██║██╔════╝██╔══██╗╚══██╔══╝    ██╔════╝██║  ██║██╔════╝██╔════╝╚══██╔══╝    
      ██║     ███████║█████╗  ███████║   ██║       ███████╗███████║█████╗  █████╗     ██║       
      ██║     ██╔══██║██╔══╝  ██╔══██║   ██║       ╚════██║██╔══██║██╔══╝  ██╔══╝     ██║       
      ╚██████╗██║  ██║███████╗██║  ██║   ██║       ███████║██║  ██║███████╗███████╗   ██║       

  `)
    )
  );

  for (const [label, message] of Object.entries(cheatSheet)) {
    const spacing = [...new Array(30 - label.length)].join(" ");
    await sleepylog(() => {
      console.info(colors.brightYellow(`${label} ${spacing} -  ${message}`));
    });
  }

  console.log(`\n`);
};
